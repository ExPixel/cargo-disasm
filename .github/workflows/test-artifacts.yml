name: Create Test Artifacts

on:
  push:
    branches: [ main ]
    paths:
      - 'assets/pow/src/**/*.rs'

env:
  CARGO_TERM_COLOR: always

jobs:

  build_linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
        override: true
    - name: Install Cross
      run: cargo install cross

    - name: Build x86_64
      run: cross build --target x86_64-unknown-linux-gnu
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-linux-x86_64
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

    - name: Build i686
      run: cross build --target i686-unknown-linux-gnu
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-linux-i686
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

    - name: Build AArch64
      run: cross build --target aarch64-unknown-linux-gnu
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-linux-aarch64
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

  build_macos:
    name: Build MacOs
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
 
# Reenable with aarch64-apple-darwin
#     - name: XCode Select
#       run: sudo xcode-select -s /Applications/Xcode_12_beta.app

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        default: true
        override: true

    - name: Install Targets
      run: |
        rustup target add x86_64-apple-darwin
        rustup target add aarch64-apple-darwin
    - name: List Targets
      run: rustup target list --installed

    - name: Build x86_64
      run: cargo build --target x86_64-apple-darwin
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-macos-x86_64
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

# TODO reenable this at some point
#     - name: Build AArch64
#       run: SDKROOT=$(xcrun -sdk macosx11.0 --show-sdk-path) MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.0 --show-sdk-platform-version) cargo build --target=aarch64-apple-darwin
#       working-directory: assets/pow
#     - uses: actions/upload-artifact@v2
#       with:
#         name: pow-macos-aarch64
#         path: assets/pow
#     - name: Clean
#       run: cargo clean
#       working-directory: assets/pow

  build_windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
        override: true
    - name: Install Targets
      run: |
        rustup target add x86_64-pc-windows-msvc
        rustup target add i686-pc-windows-msvc
        rustup target add aarch64-pc-windows-msvc
        rustup target add x86_64-pc-windows-gnu
        rustup target add i686-pc-windows-gnu
    - name: List Targets
      run: rustup target list --installed
    - name: Build msvc-x86_64
      run: cargo build --target x86_64-pc-windows-msvc
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-windows-msvc-x86_64
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

    - name: Build msvc-i686
      run: cargo build --target i686-pc-windows-msvc
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-windows-msvc-i686
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

    - name: Build msvc-AArch64
      run: cargo build --target aarch64-pc-windows-msvc
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-windows-msvc-aarch64
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow

    - name: Build gnu-x86_64
      run: cargo build --target x86_64-pc-windows-gnu
      working-directory: assets/pow
    - uses: actions/upload-artifact@v2
      with:
        name: pow-windows-gnu-x86_64
        path: assets/pow
    - name: Clean
      run: cargo clean
      working-directory: assets/pow
